name: Mention technical debt PR

on:
  issue_comment:
  pull_request_review_comment:
    types:
      - created

jobs:
  fetch_data:
    name: Fetch data from event
    runs-on: ubuntu-latest
    outputs:
      COMMENT_BODY: ${{ steps.set-output.outputs.COMMENT_BODY }}
      OWNER: ${{ steps.set-output.outputs.OWNER }}
      PR_NUMBER: ${{ steps.set-output.outputs.PR_NUMBER }}
      PR_URL: ${{ steps.set-output.outputs.PR_URL }}
      REPOSITORY: ${{ steps.set-output.outputs.REPOSITORY }}
    steps:
      - id: set-output
        name: Set output
        run: |
          echo $EVENT_CONTEXT
          echo "::set-output name=COMMENT_BODY::${{ github.event.comment.body }}"
          echo "::set-output name=OWNER::${{ github.event.repository.owner.login }}"
          if [[ -n "${{ github.event.issue.pull_request }}" ]]; then
            echo "::set-output name=PR_NUMBER::${{ github.event.issue.number }}"
            echo "::set-output name=PR_URL::${{ github.event.issue.pull_request.html_url }}"
          else
            echo "::set-output name=PR_NUMBER::${{ github.event.pull_request.number }}"
            echo "::set-output name=PR_URL::${{ github.event.comment._links.html.href }}"
          fi

          echo "::set-output name=REPOSITORY::${{ github.event.repository.name }}"
      - env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: |
          echo $EVENT_CONTEXT

  has_triggered:
    name: Has tag in comment body
    runs-on: ubuntu-latest
    needs: fetch_data
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.result }}
    steps:
      - env:
          COMMENT_BODY: ${{ needs.fetch_data_from_issue.outputs.COMMENT_BODY }}
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const { COMMENT_BODY } = process.env;
            const hasTagInBody = COMMENT_BODY.includes(/#tech-debt:/g);
            if (hasTagInBody) {
              return 'true';
            }

            console.log('Comment body must have "#tech-debt:" to be able to tag an issue');
            return;

  fetch_issue_number:
    name: Fetch issue number from comment
    runs-on: ubuntu-latest
    needs:
      - has_triggered
      - fetch_data

    if: needs.has_triggered.outputs.triggered == 'true'
    outputs:
      issue-number: ${{ steps.ensure-issue-number.outputs.result }}
    env:
      COMMENT_BODY: ${{ needs.fetch_data_from_issue.outputs.COMMENT_BODY }}
      OWNER: ${{ needs.fetch_data_from_issue.outputs.OWNER }}
      PR_NUMBER: ${{ needs.fetch_data_from_issue.outputs.PR_NUMBER }}
      PR_URL: ${{ needs.fetch_data_from_issue.outputs.PR_URL }}
      REPOSITORY: ${{ needs.fetch_data_from_issue.outputs.REPOSITORY }}
    steps:
      - id: ensure-issue-number
        if: steps.has-tech-debt-tag.outputs.triggered == 'true'
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const { COMMENT_BODY, OWNER, REPOSITORY, PR_URL, PR_NUMBER } = process.env;
            const techDebtTag = COMMENT_BODY.match(/\#tech-debt: *#[1-9]+/g)[0];
            const issueNumber = techDebtTag.match(/\#[1-9]+/g)[0].substring(1);
            const issue = await github.rest.issues.get({
              owner: OWNER,
              repo: REPOSITORY,
              issue_number: issueNumber,
            });

            if (!issue) {
              console.log(`Cannot find issue ${issueNumber}, please tag the right issue.`);
              return;
            }

            if (issue.data.pull_request) {
              console.log(`Cannot tag another pull request as the technical debt, please tag the right issue.`);
              return;
            }

            return issueNumber;

  create_comment:
    name: Create comment
    runs-on: ubuntu-latest
    needs: fetch_issue_number
    steps:
      - env:
          EVENT_CONTEXT: ${{ toJson(github.event) }}
        run: |
          echo $EVENT_CONTEXT
      - uses: actions/github-script@v5
        env:
          OWNER: ${{ github.event.repository.owner.login }}
          REPOSITORY: ${{ github.event.repository.name }}
          PR_URL: ${{ github.event.issue.pull_request.html_url }}
          PR_NUMBER: ${{ github.event.issue.number }}
        with:
          script: |
            const { OWNER, REPOSITORY, PR_URL, PR_NUMBER } = process.env;

            github.rest.issues.createComment({
              issue_number: ${{ needs.fetch_issue.outputs.issue-number }},
              owner: OWNER,
              repo: REPOSITORY,
              body: `This technical debt has been tagged in the [PR#${PR_NUMBER} ](\${PR_URL}).`
            });
