# Github script doc
# https://github.com/actions/github-script
#
# issue_comment event
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#issue_comment
#
# pull_request_review_comment
# https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#pull_request_review_comment
#
# Setting an output parameter
# https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-output-parameter
#
# Defining ouputs for jobs
# https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
name: ðŸ”§ Mention technical debt PR

on:
  issue_comment:
  pull_request_review_comment:
    types:
      - created

jobs:
  fetch_data:
    name: Fetch data from event
    runs-on: ubuntu-latest
    outputs:
      COMMENT_BODY: ${{ steps.set-output.outputs.COMMENT_BODY }}
      OWNER: ${{ steps.set-output.outputs.OWNER }}
      PR_NUMBER: ${{ steps.set-output.outputs.PR_NUMBER }}
      PR_URL: ${{ steps.set-output.outputs.PR_URL }}
      REPOSITORY: ${{ steps.set-output.outputs.REPOSITORY }}
    steps:
      - id: set-output
        name: Set output
        run: |
          echo $EVENT_CONTEXT
          echo "::set-output name=COMMENT_BODY::${{ github.event.comment.body }}"
          echo "::set-output name=OWNER::${{ github.event.repository.owner.login }}"
          if [[ -n "${{ github.event.issue.pull_request }}" ]]; then
            echo "::set-output name=PR_NUMBER::${{ github.event.issue.number }}"
            echo "::set-output name=PR_URL::${{ github.event.issue.pull_request.html_url }}"
          else
            echo "::set-output name=PR_NUMBER::${{ github.event.pull_request.number }}"
            echo "::set-output name=PR_URL::${{ github.event.comment._links.html.href }}"
          fi

          echo "::set-output name=REPOSITORY::${{ github.event.repository.name }}"

  has_triggered:
    name: Has tag in comment body
    runs-on: ubuntu-latest
    needs: fetch_data
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.result }}
    steps:
      - id: detect-trigger
        env:
          COMMENT_BODY: ${{ needs.fetch_data.outputs.COMMENT_BODY }}
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const { COMMENT_BODY } = process.env;
            const keywords = ['\\#tech-debt', '\\#technical-debt', '\\$tech-debt', '\\$technical-debt'];
            for (const keyword of keywords) {
              const regex = new RegExp(`${keyword}: *\\#[0-9]+'`, 'g');
              const match = regex.test(COMMENT_BODY);
              console.log(match);
              if (match) {
                return 'true';
              }
            }

            console.log(`Comment body must have at least one of these keywords: ${keywords.join(', ')} to be able to tag an issue`);
            return;

  fetch_issue_number:
    name: Fetch issue number from comment
    runs-on: ubuntu-latest
    needs:
      - has_triggered
      - fetch_data

    if: needs.has_triggered.outputs.triggered == 'true'
    outputs:
      issue-number: ${{ steps.ensure-issue-number.outputs.result }}
    env:
      COMMENT_BODY: ${{ needs.fetch_data.outputs.COMMENT_BODY }}
      OWNER: ${{ needs.fetch_data.outputs.OWNER }}
      PR_NUMBER: ${{ needs.fetch_data.outputs.PR_NUMBER }}
      PR_URL: ${{ needs.fetch_data.outputs.PR_URL }}
      REPOSITORY: ${{ needs.fetch_data.outputs.REPOSITORY }}
    steps:
      - env:
          EVENT_CONTEXT: ${{ toJson(needs.has_triggered) }}
        run: |
          echo $EVENT_CONTEXT
      - id: ensure-issue-number
        uses: actions/github-script@v5
        with:
          result-encoding: string
          script: |
            const { COMMENT_BODY, OWNER, REPOSITORY, PR_URL, PR_NUMBER } = process.env;
            const keywords = ['\\#tech-debt', '\\#technical-debt', '\\$tech-debt', '\\$technical-debt'];
            const techDebtTagUsed = keywords.find(keyword => {
              const regex = new RegExp(`${keyword}: *#[0-9]+'`, 'g');
              return !!COMMENT_BODY.match(regex);
            });

            const regexp = new RegExp(`${keyword}: *#[0-9]+`, 'g');
            const techDebtTag = COMMENT_BODY.match(regexp)[0];
            const issueNumber = techDebtTag.match(/\#[0-9]+/g)[0].substring(1);
            const issue = await github.rest.issues.get({
              owner: OWNER,
              repo: REPOSITORY,
              issue_number: issueNumber,
            });

            if (!issue) {
              console.log(`Cannot find issue ${issueNumber}, please tag the right issue.`);
              return;
            }

            if (issue.data.pull_request) {
              console.log(`Cannot tag another pull request as the technical debt, please tag the right issue.`);
              return;
            }

            return issueNumber;

  create_comment:
    name: Create comment
    runs-on: ubuntu-latest
    needs:
      - fetch_data
      - fetch_issue_number
    steps:
      - uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: '${{ needs.fetch_issue_number.outputs.issue-number }}',
              owner: '${{ needs.fetch_data.outputs.OWNER }}',
              repo: '${{ needs.fetch_data.outputs.REPOSITORY }}',
              body: 'This technical debt has been tagged in the [PR#${{ needs.fetch_data.outputs.PR_NUMBER }}](${{ needs.fetch_data.outputs.PR_URL }}).'
            });
